# Generated by Django 5.1.6 on 2025-05-18 16:44

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_name', models.CharField(max_length=255, verbose_name='Nom du menu')),
                ('menu_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix unitaire')),
                ('menu_description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('quantity', models.IntegerField(verbose_name='Quantité')),
                ('other_dish', models.CharField(blank=True, max_length=255, null=True, verbose_name='Autre plat')),
                ('other_dish_quantity', models.IntegerField(default=0, verbose_name='Quantité autre plat')),
                ('menu_total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix total')),
                ('customer_name', models.CharField(max_length=255, verbose_name='Nom du client')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('date_commande', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de commande')),
                ('status', models.CharField(choices=[('En attente', 'En attente'), ('Approuvé', 'Approuvé'), ('En préparation', 'En préparation'), ('Prête', 'Prête'), ('Livrée', 'Livrée'), ('Annulée', 'Annulée')], default='En attente', max_length=20, verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-date_commande'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('sujet', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id_menu', models.AutoField(primary_key=True, serialize=False)),
                ('nom_menu', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(upload_to='menu_images/')),
                ('categorie', models.CharField(choices=[('filter-starters', 'Entrées'), ('filter-salads', 'Salades'), ('filter-specialty', 'Spécialités')], default='filter-specialty', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id_reservation', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(max_length=15)),
                ('date_reservation', models.DateField(default=django.utils.timezone.now)),
                ('heure_reservation', models.TimeField(default=django.utils.timezone.now)),
                ('nombre_personnes', models.IntegerField()),
                ('message', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('categorie', models.CharField(choices=[('fruits', 'Fruits'), ('legumes', 'Légumes'), ('viandes', 'Viandes'), ('poissons', 'Poissons'), ('boissons', 'Boissons'), ('produits_laitiers', 'Produits Laitiers'), ('epices', 'Épices')], max_length=20)),
                ('quantite', models.IntegerField()),
                ('etat', models.CharField(choices=[('faible', 'Faible (stock < 15)'), ('suffisant', 'Suffisant (stock ≥ 15)')], default='suffisant', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('client', 'Client'), ('invite', 'Invité')], default='client', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nom', models.CharField(max_length=100)),
                ('fonction', models.CharField(choices=[('serveur', 'Serveur'), ('chef_cuisinier', 'Chef Cuisinier')], default='serveur', max_length=100)),
                ('salaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('numero', models.CharField(max_length=15)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif')], default='actif', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, related_name='employe_groups', related_query_name='employe', to='auth.group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='employe_permissions', related_query_name='employe', to='auth.permission', verbose_name='permissions utilisateur')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysePlat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('popularite', models.FloatField()),
                ('profitabilite', models.FloatField()),
                ('saison', models.CharField(max_length=50)),
                ('heure_pointe', models.TimeField()),
                ('plat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monprojet.menu')),
            ],
        ),
        migrations.CreateModel(
            name='AnalyseClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('segment', models.CharField(max_length=100)),
                ('moyenne_depense', models.FloatField()),
                ('frequence_visite', models.FloatField()),
                ('plats_preferes', models.ManyToManyField(to='monprojet.menu')),
            ],
        ),
        migrations.CreateModel(
            name='PredictionStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_predite', models.IntegerField()),
                ('confiance', models.FloatField()),
                ('date_prediction', models.DateTimeField(auto_now_add=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monprojet.stock')),
            ],
        ),
    ]
